public static void initalizeSlotsForDate(String date){
        HashMap<String, Appointment> slots = new HashMap<>();
        slots.put("12pm", null);
        slots.put("1pm", null);
        slots.put("2pm", null);
        slots.put("3pm", null);
        slots.put("4pm", null);
        appointmentSchedule.put(date, slots);
        Database.saveFileIntoDatabase(FileType.APPOINTMENTS);
    }

    //FOR PATIENTS

    //what if type wrongly not in that form (NEED TO ENSURE DATE ENTERED IS CORRECT, IF NOT USE HELPER FUNCTION TO HELP U VALIDATE)
    public static void viewAvailableAppointmentSlots(String patientID, String date){
        if(!appointmentSchedule.containsKey(date)){
            initalizeSlotsForDate(date);
        }

        System.out.println(String.format("%-40s", "").replace(" ", "-"));
        System.out.println("Available Appointment Slots for" + date + ":");
        
        List<String> timeSlotsOrder = Arrays.asList("1pm", "2pm", "3pm", "4pm", "5pm");

        for (String time : timeSlotsOrder) {
            Appointment appointment = appointmentSchedule.get(date).get(time);

            //Print out only if it is free
            if (appointment == null) {
                System.out.println(time); 
            }
        }
        

        System.out.println(String.format("%-40s", "").replace(" ", "-"));
    }

    public static void viewScheduledAppointments(String patientID){

    }

    //See if date and time is needed or not
    public static boolean scheduleAppointment(String patientID, String doctorID, String date, String time){

        if(!Database.APPOINTMENT.containsKey(date)){
            initalizeSlotsForDate(date);
        }

        //double check to see if appointment slot already booked
        if (appointmentSchedule.get(date).get(time) != null){
            System.out.println("Time slot " + time + " on " + date + " is not available.");
            return false;
        }

        Appointment appointment;
        appointment = new Appointment(doctorID, patientID, date, time);
        appointmentSchedule.get(date).put(time, appointment);
        System.out.println("Appointment scheduled for" + date + "at" + time);

        Database.APPOINTMENT = appointmentSchedule;
        Database.saveFileIntoDatabase(FileType.APPOINTMENTS);
        return true;

    }

    public static boolean cancelAppointment(String patientID,String date, String time){
        if (appointmentSchedule.get(date).get(time) != null){
            Appointment appointment = appointmentSchedule.get(date).get(time);

            if (appointment.getPatientID().equals(patientID)){
                if (Helper.promptConfirmation("cancel this appointment")){
                    HashMap<String, Appointment> timeSlots = appointmentSchedule.get(date);

                    timeSlots.remove(time);
                    timeSlots.put(time, null);
                    Database.APPOINTMENT = appointmentSchedule;
                    Database.saveFileIntoDatabase(FileType.APPOINTMENTS);
                    return true;
                }
            } else {
            System.out.println("You have no appointment scheduled for" + date + "at" + time);
            return false;
            }
        } else {
        System.out.println("You have no appointment scheduled for" + date + "at" + time);
        return false;
        }
    }


    
    //want implement like cant reschedule a day before appointment??
    public static boolean rescheduleAppointment(String patientID, String oldDate, String newDate, String oldTime, String newTime){
        
        Appointment oldAppointment = appointmentSchedule.get(oldDate).get(oldTime);

        //check see if got patient appointment
        if (oldAppointment == null){
            System.out.println("You have no appointment scheduled for" + oldDate + "at" + oldTime);
            return false;
        }
        if (!oldAppointment.getPatientID().equals(patientID)){
            System.out.println("You have no appointment scheduled for" + oldDate + "at" + oldTime);
            return false;
        }

        if(appointmentSchedule.get(newDate).get(newTime) == null){
            Appointment newAppointment = oldAppointment;
            AppointmentManager.scheduleAppointment(patientID, newAppointment.getDoctorID(), newDate, newTime);
            AppointmentManager.cancelAppointment(patientID, oldDate, oldTime);
            Database.APPOINTMENT = appointmentSchedule;
            Database.saveFileIntoDatabase(FileType.APPOINTMENTS);
            return true;
        } else {
            System.out.println("Time slot " + newTime + " on " + newDate + " is not available.");
            return false;
        }


    }
